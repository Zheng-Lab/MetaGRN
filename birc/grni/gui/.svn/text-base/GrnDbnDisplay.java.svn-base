package birc.grni.gui;

import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JSpinner;



public class GrnDbnDisplay {
	
	protected JFrame frame_dbn;
	protected GrnGuiHeader header_dbn = new GrnGuiHeader();
	
	protected JPanel headerPanel_dbn;
	protected JPanel textFieldPanelDbn;
	protected JPanel bottomPanel;
	
	protected TextField dataFilePathDbn;
	protected TextField numGenesDbn;
	protected TextField priorDataText;
	protected TextField resultSavePath;
	
	protected JLabel datafilePathLabelDbn;
	protected JLabel numGenesLabelDbn;
	protected JLabel priorDataLable;
	protected JLabel betaValue;
	protected JLabel numIterations;
	protected JLabel resultPathLable;
	
	protected JCheckBox priorDataBox;
	protected JButton dataFileButtonDbn;
	protected JButton priorSelect;
	protected static JButton startButton;
	protected JButton resultFileSelect;
	
	protected JSpinner betaSpinner;
	protected JSpinner iterationSpinner;

	public static JProgressBar progressBarDbn;
	
	public GrnDbnDisplay(JFrame frame_1){
		
		frame_dbn=frame_1;
		frame_dbn.setBackground(Color.WHITE);
		//frame_dbn.getContentPane().setFocusCycleRoot(true);
		frame_dbn.getContentPane().setBackground(Color.WHITE);
		frame_dbn.setSize(new Dimension(0,0));
		frame_dbn.setBounds(200,200,600,400);
		
		frame_dbn.setTitle("DBN Inference");
		
		// adding header panel 
		headerPanel_dbn = new JPanel();
		headerPanel_dbn.setBackground(Color.WHITE);
		final CardLayout cards_ = new CardLayout();
		headerPanel_dbn.setLayout(cards_);
		frame_dbn.getContentPane().add(headerPanel_dbn, BorderLayout.NORTH);
		headerPanel_dbn.add(header_dbn, "header");
		
		// create textfield panel and add component in to it
		textFieldPanelDbn = new JPanel();
		textFieldPanelDbn.setBackground(Color.WHITE);
		GridBagLayout gridBagLayout1 = new GridBagLayout();
		textFieldPanelDbn.setLayout(gridBagLayout1);
		frame_dbn.getContentPane().add(textFieldPanelDbn,BorderLayout.CENTER);
		
		
		datafilePathLabelDbn = new JLabel();
		datafilePathLabelDbn.setText("Input file path");
		GridBagConstraints bagConstraintsdbn = new GridBagConstraints();
		bagConstraintsdbn.fill = GridBagConstraints.HORIZONTAL;
		bagConstraintsdbn.weightx = 0.5;
		bagConstraintsdbn.weighty = 1;
		bagConstraintsdbn.gridx = 0;
		bagConstraintsdbn.gridy = 0;
		bagConstraintsdbn.insets = new Insets(0,5,0,10);
		textFieldPanelDbn.add(datafilePathLabelDbn, bagConstraintsdbn);
		
		
		dataFilePathDbn = new TextField();
		//GridBagConstraints bagConstraints2 = new GridBagConstraints();
		bagConstraintsdbn.insets = new Insets(0,10,0,10);				
		//bagConstraints2.weightx = 1;									
		bagConstraintsdbn.weightx = 0.5;
		bagConstraintsdbn.gridx = 1;
		bagConstraintsdbn.gridy = 0;
		textFieldPanelDbn.add(dataFilePathDbn, bagConstraintsdbn);
		dataFilePathDbn.setColumns(20);
		
		dataFileButtonDbn = new JButton();
		dataFileButtonDbn.setText("Browse");
		//GridBagConstraints bagConstraints3 = new GridBagConstraints();
		bagConstraintsdbn.weightx = 0.5;									
		
		//bagConstraints3.gridwidth = GridBagConstraints.REMAINDER;
		bagConstraintsdbn.insets = new Insets(0,10,0,10);
		bagConstraintsdbn.gridx = 3;
		bagConstraintsdbn.gridy = 0;
		textFieldPanelDbn.add(dataFileButtonDbn,bagConstraintsdbn);
		dataFileButtonDbn.addActionListener(
					new ActionListener() {
						public void actionPerformed(ActionEvent e)
						{
							/* pop up the file chooser window*/
							JFileChooser chooser = new JFileChooser();
							chooser.setSelectedFile(new File("E:/LIU/Code/workspace/GUI_H/data/data_dbn.txt"));
						    int returnVal = chooser.showOpenDialog(null);
						    if(returnVal == JFileChooser.APPROVE_OPTION) {
						    	dataFilePathDbn.setText(chooser.getSelectedFile().getAbsolutePath());
						    }
						}
					}
				);
		
		


		numGenesLabelDbn = new JLabel();
		numGenesLabelDbn.setText("Number of Genes");
		bagConstraintsdbn.gridx = 0;
		bagConstraintsdbn.gridy = 1;
		bagConstraintsdbn.insets = new Insets(0,5,0,10);
		textFieldPanelDbn.add(numGenesLabelDbn, bagConstraintsdbn); 
		
	
		numGenesDbn = new TextField();
		bagConstraintsdbn.gridx = 1;
		bagConstraintsdbn.gridy = 1;
		bagConstraintsdbn.insets = new Insets(0,10,0,250);
		bagConstraintsdbn.ipadx =0;
		textFieldPanelDbn.add(numGenesDbn, bagConstraintsdbn);
		
		// insert component to handle prior data //
		priorDataBox = new JCheckBox();
		priorDataBox.setText("Include prior data");
		priorDataBox.setBackground(Color.WHITE);
		bagConstraintsdbn.gridx = 0;
		bagConstraintsdbn.gridy = 2;
		bagConstraintsdbn.insets = new Insets(0,0,0,15);
		//bagConstraintsdbn.ipadx =0;
		textFieldPanelDbn.add(priorDataBox, bagConstraintsdbn);
		
		priorDataLable = new JLabel();
		priorDataLable.setText("Prior data file");
		bagConstraintsdbn.gridx = 0;
		bagConstraintsdbn.gridy = 3;
		bagConstraintsdbn.insets = new Insets(0,20,0,0);
		textFieldPanelDbn.add(priorDataLable, bagConstraintsdbn);
		//priorDataLable.setFocusable(false);
		
		
		priorDataText = new TextField();
		bagConstraintsdbn.gridx = 1;
		bagConstraintsdbn.gridy = 3;
		bagConstraintsdbn.insets = new Insets(0,10,0,10);
		textFieldPanelDbn.add(priorDataText, bagConstraintsdbn);
		priorDataText.setColumns(20);
		priorDataText.setEnabled(false);
		
		priorSelect = new JButton();
		priorSelect.setText("Browse");
		bagConstraintsdbn.gridx = 3;
		bagConstraintsdbn.gridy = 3;
		bagConstraintsdbn.insets = new Insets(0,10,0,10);
		textFieldPanelDbn.add(priorSelect, bagConstraintsdbn);
		priorSelect.setEnabled(false);
		
		priorSelect.addActionListener(
				new ActionListener() {
					public void actionPerformed(ActionEvent e)
					{
						/* pop up the file chooser window*/
						if(priorDataBox.isSelected()){
							JFileChooser chooser = new JFileChooser();
						    int returnVal = chooser.showOpenDialog(null);
						    if(returnVal == JFileChooser.APPROVE_OPTION) {
						    	priorDataText.setText(chooser.getSelectedFile().getAbsolutePath());
						    }
						}
						
					}
				}
			);
		
		betaValue = new JLabel();
		betaValue.setText("Beta value");
		bagConstraintsdbn.gridx = 0;
		bagConstraintsdbn.gridy = 4;
		bagConstraintsdbn.insets = new Insets(0,20,0,10);
		textFieldPanelDbn.add(betaValue, bagConstraintsdbn);
		
		betaSpinner = new JSpinner();
		bagConstraintsdbn.gridx = 1;
		bagConstraintsdbn.gridy = 4;
		bagConstraintsdbn.insets = new Insets(0,10,0,300);
		//bagConstraintsdbn.insets = new In
		textFieldPanelDbn.add(betaSpinner, bagConstraintsdbn);
		betaSpinner.setEnabled(false);
		 // end of prior section //
		
		// set number of Dbn iterations
		numIterations = new JLabel();
		numIterations.setText("Number of Iterations");
		bagConstraintsdbn.gridx = 0;
		bagConstraintsdbn.gridy = 5;
		bagConstraintsdbn.insets = new Insets(0,5,0,10);
		textFieldPanelDbn.add(numIterations, bagConstraintsdbn);
		
		iterationSpinner = new JSpinner();
		bagConstraintsdbn.gridx = 1;
		bagConstraintsdbn.gridy = 5;
		bagConstraintsdbn.insets = new Insets(0,10,0,220);
		textFieldPanelDbn.add(iterationSpinner, bagConstraintsdbn);
		
		
		// obtain the result file//
		resultPathLable = new JLabel();
		resultPathLable.setText("Result File path");
		bagConstraintsdbn.gridx = 0;
		bagConstraintsdbn.gridy = 6;
		bagConstraintsdbn.insets = new Insets(0,5,0,10);
		textFieldPanelDbn.add(resultPathLable, bagConstraintsdbn);
		
		resultSavePath = new TextField();
		bagConstraintsdbn.gridx = 1;
		bagConstraintsdbn.gridy = 6;
		bagConstraintsdbn.insets = new Insets(0,10,0,10);
		textFieldPanelDbn.add(resultSavePath, bagConstraintsdbn);
		priorDataText.setColumns(20);
		
		resultFileSelect = new JButton();
		resultFileSelect.setText("Select");
		bagConstraintsdbn.gridx = 3;
		bagConstraintsdbn.gridy = 6;
		bagConstraintsdbn.insets = new Insets(0,10,0,10);
		textFieldPanelDbn.add(resultFileSelect, bagConstraintsdbn);
		
		resultFileSelect.addActionListener(
				new ActionListener() {
					public void actionPerformed(ActionEvent e)
					{
						/* pop up the file chooser window*/
						
							JFileChooser chooser = new JFileChooser();
						    int returnVal = chooser.showSaveDialog(null);
						    if(returnVal == JFileChooser.APPROVE_OPTION) {
						    	resultSavePath.setText(chooser.getSelectedFile().getAbsolutePath());
						    }
						}	
				}
			);
		
		// bottom panel //
		bottomPanel = new JPanel();
		//bottomPanel.setBackground( Color.WHITE);
		GridBagLayout gridBagLayoutbottom = new GridBagLayout();
		bottomPanel.setLayout(gridBagLayoutbottom);
		//bottomPanel.setLayout(new GridLayout(1, 2));
		frame_dbn.getContentPane().add(bottomPanel,BorderLayout.SOUTH);
	
		Component componentStruct = Box.createVerticalStrut(10);
		final GridBagConstraints gridBagConstraintsStruct = new GridBagConstraints();
		gridBagConstraintsStruct.gridy = 0;
		gridBagConstraintsStruct.gridx = 1;
		bottomPanel.add(componentStruct, gridBagConstraintsStruct);
		
		startButton = new JButton();
		startButton.setText("Start");
		//bottomPanel.add(startButton);
		GridBagConstraints bagConstraintsbottom = new GridBagConstraints();
		bagConstraintsbottom .fill = GridBagConstraints.HORIZONTAL;
		bagConstraintsbottom .weightx = 0.5;
		bagConstraintsbottom .gridy = 1;
		bagConstraintsbottom .gridx = 0;
		bagConstraintsbottom .insets = new Insets(10,30,10,50);
		bottomPanel.add(startButton, bagConstraintsbottom );
		
		progressBarDbn = new JProgressBar();
		progressBarDbn.setStringPainted(true);
		//bagConstraintsbottom.ipady =15;
		bagConstraintsbottom .gridx = 1;
		bagConstraintsbottom .gridy = 1;
		bagConstraintsbottom .insets = new Insets(0,10,0,100);
		bottomPanel.add( progressBarDbn, bagConstraintsbottom );
		
		Component componentStruct2 = Box.createVerticalStrut(10);
		final GridBagConstraints gridBagConstraintsStruct2 = new GridBagConstraints();
		gridBagConstraintsStruct2.gridy = 2;
		gridBagConstraintsStruct2.gridx = 2;
		bottomPanel.add(componentStruct2, gridBagConstraintsStruct2);
		
	}
}
