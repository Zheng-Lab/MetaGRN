package birc.grni.gui;

import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;

import javax.swing.*;

public class GrnRfDisplay {
	
	protected JFrame frameRf;
	protected GrnGuiHeader headerRf = new GrnGuiHeader();
	
	protected JPanel headerPanelRf;
	protected JPanel textFieldPanel;
	protected JPanel bottomPanel;
	
	protected TextField dataFilePathField;
	
	protected TextField nbTreesField;
	protected JComboBox<String> treeMethodComboBox;
	
	protected JButton selectDataFilePathButton;
	
	protected JLabel dataFilePathLabel;
	protected JLabel nbTreesLabel;
	protected JLabel treeMethodLabel;
	
	protected JButton startButton;
	
	public static JProgressBar progressBarRf;			/* progress bar*/
	
	public GrnRfDisplay(JFrame frame)
	{
		frameRf = frame;
		frameRf.setBackground(Color.WHITE);
		frameRf.setBounds(200, 200, 500, 400);
		
		frameRf.setTitle("Random Forests Inference");
		
		// add header panel
		headerPanelRf = new JPanel();
		headerPanelRf.setBackground(Color.WHITE);
		CardLayout cardLayout = new CardLayout();
		headerPanelRf.setLayout(cardLayout);
		frameRf.getContentPane().add(headerPanelRf, BorderLayout.NORTH);
		headerPanelRf.add(headerRf, "header");
		
		// create text field panel and add component into it
		textFieldPanel = new JPanel();
		textFieldPanel.setBackground(Color.WHITE);
		GridBagLayout gridBagLayout = new GridBagLayout();
		textFieldPanel.setLayout(gridBagLayout);
		
		frameRf.getContentPane().add(textFieldPanel, BorderLayout.CENTER);
		
		/* grid layout constraints for textFieldPanel*/
		GridBagConstraints textFieldLayoutConstraints = new GridBagConstraints(); 
		
		/* input file path components*/
		dataFilePathLabel = new JLabel();
		dataFilePathLabel.setText("Full path of the input file");
		
		dataFilePathField = new TextField();
		
		selectDataFilePathButton = new JButton();
		selectDataFilePathButton.setText("Select");
		selectDataFilePathButton.addActionListener(
					new ActionListener() {
						public void actionPerformed(ActionEvent e)
						{
							/* pop up the file chooser window*/
							JFileChooser chooser = new JFileChooser();
							chooser.setSelectedFile(new File("E:/LIU/Code/workspace/GUI_H/data/data_rf.txt"));
						    int returnVal = chooser.showOpenDialog(null);
						    if(returnVal == JFileChooser.APPROVE_OPTION) {
						            dataFilePathField.setText(chooser.getSelectedFile().getAbsolutePath());
						    }
						}
					}
				);
		
		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridx = 0;
		textFieldLayoutConstraints.gridy = 0;
		textFieldLayoutConstraints.gridwidth = 1;
		textFieldLayoutConstraints.insets = new Insets(0,5,0,10);
		textFieldPanel.add(dataFilePathLabel, textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/
		
		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridx = 1;
		textFieldLayoutConstraints.gridy = 0;
		textFieldLayoutConstraints.weightx = 1;									/* put all extra horizontal space in the file path field*/
		textFieldLayoutConstraints.gridwidth = 5;
		textFieldPanel.add(dataFilePathField, textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/
		
		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridx = 6;
		textFieldLayoutConstraints.gridy = 0;
		textFieldLayoutConstraints.gridwidth = GridBagConstraints.REMAINDER;
		textFieldLayoutConstraints.insets = new Insets(0,10,0,10);
		textFieldPanel.add(selectDataFilePathButton, textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/
		
		/* number of trees components*/
		nbTreesLabel = new JLabel();
		nbTreesLabel.setText("Number of trees");
		nbTreesField = new TextField();
		nbTreesField.setText("1000");											/* by default 1000 trees*/
		
		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridx = 0;
		textFieldLayoutConstraints.gridy = 1;
		textFieldLayoutConstraints.insets = new Insets(0,5,0,10);
		textFieldPanel.add(nbTreesLabel, textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/
		
		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridx = 1;
		textFieldLayoutConstraints.gridy = 1;
		textFieldLayoutConstraints.ipadx = 20;
		textFieldPanel.add(nbTreesField, textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/
		
		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridwidth = GridBagConstraints.REMAINDER;
		textFieldLayoutConstraints.insets = new Insets(0,10,0,10);
		textFieldPanel.add(new JLabel("(<= 10000)"), textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/
		
		/* tree method components*/
		treeMethodLabel = new JLabel();
		treeMethodLabel.setText("Tree method");
		treeMethodComboBox = new JComboBox<String>();
		for(String method: GrnRf.treeMethods)
			treeMethodComboBox.addItem(method);
		
		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridx = 0;
		textFieldLayoutConstraints.gridy = 2;
		textFieldLayoutConstraints.gridwidth = 1;
		textFieldLayoutConstraints.insets = new Insets(0,5,0,10);
		textFieldPanel.add(treeMethodLabel, textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/

		textFieldLayoutConstraints.fill = GridBagConstraints.HORIZONTAL;
		textFieldLayoutConstraints.weighty = 1;
		textFieldLayoutConstraints.gridx = 1;
		textFieldLayoutConstraints.gridy = 2;
		textFieldLayoutConstraints.gridwidth = 5;
		textFieldLayoutConstraints.gridwidth = GridBagConstraints.RELATIVE;
		textFieldPanel.add(treeMethodComboBox, textFieldLayoutConstraints);
		
		textFieldLayoutConstraints = new GridBagConstraints();					/* restore default*/
		
		/* result save path components*/
//		resultSavePathLabel = new JLabel();
//		resultSavePathLabel.setText("<html>Output path where <br>result will be saved</html>");
//		resultSavePathField = new TextField();
//		selectResultSavePathButton = new JButton();
//		selectResultSavePathButton.setText("Select");
//		selectResultSavePathButton.addActionListener(
//					new ActionListener() {
//						public void actionPerformed(ActionEvent e)
//						{
//							/* pop up the file chooser window*/
//							JFileChooser chooser = new JFileChooser();
//						    int returnVal = chooser.showOpenDialog(null);
//						    if(returnVal == JFileChooser.APPROVE_OPTION) {
//						    	resultSavePathField.setText(chooser.getSelectedFile().getAbsolutePath());
//						    }
//						}
//					}
//				);
//		
//		textFieldLayoutConstraints.insets = new Insets(0,5,0,10);
//		textFieldPanel.add(resultSavePathLabel, textFieldLayoutConstraints);
//		textFieldLayoutConstraints.insets = new Insets(0,0,0,0);				/* restore default*/
//		
//		textFieldLayoutConstraints.weightx = 1;									
//		textFieldLayoutConstraints.gridwidth = GridBagConstraints.RELATIVE;
//		textFieldPanel.add(resultSavePathField, textFieldLayoutConstraints);
//		textFieldLayoutConstraints.weightx = 0;									/* restore default*/
//		
//		textFieldLayoutConstraints.gridwidth = GridBagConstraints.REMAINDER;
//		textFieldLayoutConstraints.insets = new Insets(0,10,0,10);
//		textFieldPanel.add(selectResultSavePathButton, textFieldLayoutConstraints);
//		textFieldLayoutConstraints.insets = new Insets(0,0,0,0);				/* restore default*/
		
		// bottom panel
		
		//TEST
//		bottomPanel = new JPanel();
//		bottomPanel.setBackground(Color.WHITE);
//		bottomPanel.setLayout(new GridLayout(1, 2));
//		frameRf.getContentPane().add(bottomPanel,BorderLayout.SOUTH);
//		
//		startButton = new JButton();
//		startButton.setText("Start");
//		bottomPanel.add(startButton);
//		
//		exitButton = new JButton();
//		exitButton.setText("Exit");
//		bottomPanel.add(exitButton);	
		
		//TEST
		bottomPanel = new JPanel();
		bottomPanel.setLayout(new GridBagLayout());
		frameRf.getContentPane().add(bottomPanel,BorderLayout.SOUTH);
	
		Component componentStruct = Box.createVerticalStrut(10);
		final GridBagConstraints gridBagConstraintsStruct = new GridBagConstraints();
		gridBagConstraintsStruct.gridy = 0;
		gridBagConstraintsStruct.gridx = 1;
		bottomPanel.add(componentStruct, gridBagConstraintsStruct);
		
		startButton = new JButton();
		startButton.setText("Start");
		//bottomPanel.add(startButton);
		GridBagConstraints bagConstraintsbottom = new GridBagConstraints();
		bagConstraintsbottom .fill = GridBagConstraints.HORIZONTAL;
		bagConstraintsbottom .weightx = 0.5;
		bagConstraintsbottom .gridy = 1;
		bagConstraintsbottom .gridx = 0;
		bagConstraintsbottom .insets = new Insets(10,30,10,50);
		bottomPanel.add(startButton, bagConstraintsbottom );
		
		progressBarRf = new JProgressBar();
		progressBarRf.setStringPainted(true);
		//bagConstraintsbottom.ipady =15;
		bagConstraintsbottom .gridx = 1;
		bagConstraintsbottom .gridy = 1;
		bagConstraintsbottom .insets = new Insets(0,10,0,100);
		bottomPanel.add(progressBarRf, bagConstraintsbottom);
		
		Component componentStruct2 = Box.createVerticalStrut(10);
		final GridBagConstraints gridBagConstraintsStruct2 = new GridBagConstraints();
		gridBagConstraintsStruct2.gridy = 2;
		gridBagConstraintsStruct2.gridx = 2;
		bottomPanel.add(componentStruct2, gridBagConstraintsStruct2);
	}
}