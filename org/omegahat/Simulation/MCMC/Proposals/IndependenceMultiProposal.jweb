This class serves as a container for the proposals for a vector of
MCMC chains.  It assumes that the proposals are \emph{independent}.  

<<Copyright>>=

/* $Header: /cvsroot/hydra-mcmc/Hydra/org/omegahat/Simulation/MCMC/Proposals/IndependenceMultiProposal.jweb,v 1.1.1.1 2001/04/04 17:16:23 warneg Exp $  */

@ %def 

<<*>>=

<<Copyright>>
<<Package>>
<<Imports>>

public class IndependenceMultiProposal extends MultiProposal
{
  <<Fields>>
  <<Accessors>>

  <<Methods implementing GeneralPropoal>>
  <<Methods implementing ConditionalDensity>>
  <<Methods implementing ConditionalGenerator>>

  <<Constructors>>
}

@ %def 

<<Fields>>=

/* inherited */

@ %def 

<<Accessors>>=

/* inheritied */

@ %def 



<<Methods implementing GeneralPropoal>>=

/* inherited */

@

<<Methods implementing ConditionalDensity>>=


public double logConditionalPDF( Object state, Object conditions )
{
  MultiState states = (MultiState) state;
  MultiState conds  = (MultiState) conditions;
  
  double retval =0.0;
  
  for(int i=0; i<proposals.length; i++)
    retval += proposals[i].logConditionalPDF( states.get(i),
                                              conds.get(i) );
  
  return retval;
}

@ %def 

<<Methods implementing ConditionalGenerator>>=

// generate a single random value 
public Object   generate( Object conditionals )
{
   MultiState states = (MultiState) conditionals;

   MultiState retval = new MultiState( proposals.length );

 
  for(int i=0; i<proposals.length; i++)
   retval.add( proposals[i].generate( states.get(i) ));
  
  return retval;
}


@ %def 



<<Constructors>>=

public IndependenceMultiProposal( int nchain )
{
    proposals = new GeneralProposal[nchain];
}

public IndependenceMultiProposal( int nchain, GeneralProposal singleProposal )
{
    proposals = new GeneralProposal[nchain];
    for(int i=0; i < proposals.length; i++)
        proposals[i] = singleProposal;
}

public IndependenceMultiProposal( GeneralProposal[] proposalList )
{
    proposals = proposalList;
}

@

<<Package>>=

    package org.omegahat.Simulation.MCMC.Proposals;

@ %def 

<<Imports>>=

    import org.omegahat.Simulation.MCMC.*;

    import org.omegahat.Probability.Distributions.*;

@ %def 

