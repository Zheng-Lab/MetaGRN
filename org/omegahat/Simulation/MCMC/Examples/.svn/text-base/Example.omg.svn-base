/* Target (Posterior) Distribuition model */
m = ModelFormula.multiLineParse(" X ~ N( mu, sigma) ; mu ~ N( zero, ten) "); /*; rho ~ Beta(8,3); "); */

/* Proposal Distrubtion model*/
p = ModelFormula.multiLineParse(" mu ~ N( mu, sm ); rho ~ N( rho, sr) ");   

/* set up prng stuff*/
a = new CollingsPRNGAdministrator();

/* initial state*/
i = new MCMCStateDatabase("Initial State"); 
i.assign("mu",10.0);
i.assign("rho", 0.95 );

/* definitions */
d = new ObjectDatabase("Definitions");
d.assign("sigma",1.0);
d.assign("N", new Normal( new CollingsPRNG( a.registerPRNGState() ) ) );
d.assign("X", 0.125 ); /* new Double[]{1.,2.,3.,1.,4.} );*/
d.assign("sm", 1.0 );
d.assign("sr", 0.05 );
d.assign("zero",0.0);
d.assign("one",1.0);
d.assign("ten",10.0);

/* ev = new ModelEvaluator( m, p, i, d );  /* for testing */

pm = new ExpressionGeneralProposal( p , d );

tm = new ExpressionTarget( m, d );  

/* mcmc = new MetropolisGenerator( tm, ev, i  ); */