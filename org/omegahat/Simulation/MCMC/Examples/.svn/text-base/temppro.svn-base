


// line 185 "NormalProposal.jweb"
  package org.omegahat.Simulation.MCMC.Proposals;
import java.lang.Math;
import java.io.*;
import java.util.*;
// line 191 "NormalProposal.jweb"
    import org.omegahat.Simulation.MCMC.*;

  import org.omegahat.Probability.Distributions.*;
  import org.omegahat.Simulation.RandomGenerators.*;
  import org.omegahat.GUtilities.ArrayTools;
  import org.omegahat.Probability.Distributions.UnnormalizedDensity;

//   import Jama.*;



// line 11 "NormalProposal.jweb"
public class Hdbn_Proposal extends MVNormal implements GeneralProposal
{
   int step = -1, indexi=-1, indexj =-1, nogenes = 0, order = 0;
  
// line 26 "NormalProposal.jweb"
//public boolean DEBUG = true;
public boolean DEBUG = false;

// line 15 "NormalProposal.jweb"
    
// line 32 "NormalProposal.jweb"
    
/* inherited */

// line 16 "NormalProposal.jweb"


/** Constructor for a (standard) spherical normal with mean 0 and identity covariance matrix 
 * @param length number of dimensions
**/
public Hdbn_Proposal( int length , int ord , PRNG prng )
{
  super(length, prng );
  nogenes = length;
  order = ord;

}

// line 17 "NormalProposal.jweb"
    
// line 103 "NormalProposal.jweb"
public Object generate( Object ignored ) 
{
      
      int[] param = ArrayTools.Otoi( ignored ); 
      // new object and return it
      Random r = new Random();
      int i = r.nextInt(nogenes);
      int j = r.nextInt(nogenes);
      //int i=0, j=0;
      step = r.nextInt(3);
      if(step == 0)
      if(param[i*nogenes+j]<order){int pcnt = 0;
      for(int k=0; k<nogenes; k++)if(param[i*nogenes+k]>0)pcnt++;
      if(pcnt < 3){param[i*nogenes+j]++; indexi = i; indexj = j;} // increase
      }
      if(step == 1)
      if(param[i*nogenes+j]>0){ param[i*nogenes+j]--; // decrease
        indexi = i; indexj = j;}
      if(step == 2){ int pcnt = 0;
      // cnt parents of j 
      for(int k=0; k<nogenes; k++)if(param[j*nogenes+k]>0)pcnt++;
      if(pcnt<3){
           int temp = param[j*nogenes+i];
           param[j*nogenes+i]=param[i*nogenes+j];
           param[i*nogenes+j] = temp; // reverse
           indexi = i; indexj = j;
        }//end of if
      }// end of step if    

      //System.out.println("here i is "+indexi+" "+indexj+" "+step); 
      return param;
}

// line 18 "NormalProposal.jweb"
    
// line 126 "NormalProposal.jweb"
public double conditionalPDF( Object state, Object ignored )
{
    // print object state and get the pdf 
  //compare two objects , get i , j and step type 
  int[] param = ArrayTools.Otoi( state );
    // ouput graph and read in answer
  double ans = 0;
  try{
  PrintWriter pwStream
                            = new PrintWriter( new BufferedWriter( new FileWriter("dag.txt") ));

       for(int i=0; i<nogenes; i++){
         for(int j=0; j<nogenes; j++){
                        pwStream.print( param[i*nogenes+j]);
                        pwStream.print( " " ); }
       pwStream.print( "\n" ); }

       pwStream.close();

  //System.out.println("perl proposal.pl "+indexi+" "+indexj+" "+param[indexi*nogenes+indexj]+" "+step+" Chua_mi "+order);
  Process p = Runtime.getRuntime().exec("perl proposal.pl "+indexi+" "+indexj+" "+param[indexi*nogenes+indexj]+" "+step+" Chua_mi ");
  BufferedReader in = new BufferedReader(
                                new InputStreamReader(p.getInputStream()));
    ans = Double.parseDouble(in.readLine());
    }
  catch(Exception e){}
  //System.out.println("proposal is "+ans);
  return ans;
}

public double logConditionalPDF( Object state, Object conditionals )
{
    // log of conditionalPDF
    return Math.log(conditionalPDF( state, conditionals ));
}

// line 19 "NormalProposal.jweb"
    
// line 112 "NormalProposal.jweb"
public double transitionProbability( Object from, Object to )
{
    return conditionalPDF( to, from );
}

public double logTransitionProbability( Object from, Object to )
{ 
    return logConditionalPDF( to, from );
}
// line 20 "NormalProposal.jweb"
    
// line 142 "NormalProposal.jweb"
static public void main( String[] argv )
{

}

// line 21 "NormalProposal.jweb"
}
