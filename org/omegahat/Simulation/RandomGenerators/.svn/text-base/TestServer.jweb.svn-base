@ This is the simple class that runs as an application and creates a
CORBA PRNG administrator as defined in \file{CorbaPRNGUtil.idl}.
<<*>>=

package org.omegahat.Simulation.RandomGenerators;

<<Imports>>

public class TestServer {

<<Fields>>
<<Names>>
<<Accessors>>
<<Constructors>>
<<Init Corba>>


<<Main>>
}

@ 
<<Fields>>=
  public org.omg.CORBA.ORB orb = null;
  public org.omg.CORBA.BOA boa = null;
  protected String[] args = null;



@ 
<<Constructors>>=
public TestServer(String []args) 
{
  this.args  = args;
  
System.err.println("Initializing Corba...");
  initCorba();
System.err.println("Got Orb " + orb);  


System.err.println("Registering Administrator...");
  registerCorbaServer(adminName,   new CollingsCorbaPRNGAdministrator() );

System.err.println("Registering Factory...");
  registerCorbaServer(factoryName, new CollingsCorbaPRNGFactory() );
 
System.err.println("Server about to enter request loop");

    // now go into the event loop.
   boa.impl_is_ready(null);
}


protected void registerCorbaServer( String name, org.omg.CORBA.Object server )
  {
  
  /* Now we can register this server on the naming service. */
  NamingService namingService = new NamingService(orb);

  /* Remove any CORBA server registered with that name previously. */
  System.err.println("Attempting to remove any previously registered servers.");
  try 
    {
      namingService.unbind(name);
    } 
  catch(Throwable ex)
    {
       System.err.println("No previously registered servers.");
    }

  System.err.println("Attempting to register using the name \""+ name +"\"" );
  namingService.bind(name, server);

}

@ 
<<Main>>=
static public void main(String[] args) {
   TestServer server = new TestServer(args);

// return(0);
}

@ This initializes the connector to the ORB and BOA.  Note that one
should have the ORBACUS_CONFIG ``environment variable'' set when
running this java application.
This is done via the
\begin{verb}
 -Dooc.config=<filename>  
\end{verb}
flag.
<<Init Corba>>=
 public boolean initCorba() {
    try {
       orb = org.omg.CORBA.ORB.init(args, new java.util.Properties());     
       boa = ((com.ooc.CORBA.ORB)orb).BOA_init(args, new java.util.Properties());     
    } catch(Exception e) {
e.printStackTrace();
     System.out.println("Failed to connecto to ORB");
     return(false);
    }
     return(true);
 }


@ 
This must be the same name as used to locate the server.


<<Names>>=
protected String adminName = "PRNGAdministrator";
protected String factoryName = "PRNGFactory";
@

<<Accessors>>=
String getAdminName()
  {
    return adminName;
  }

String getFactoryName()
  {
      return factoryName;
  }

void setAdminName(String in_adminName)
  {
    adminName = in_adminName;
  }

void setFactoryName(String in_factoryName)
  {
      factoryName = in_factoryName;
  }

@ %def 


<<Imports>>=
import org.omegahat.Interfaces.CORBA.NamingService;
@










