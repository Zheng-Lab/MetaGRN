@ This is an implementation of the \IDLInterface{PRNGFactory} to
instantiate \OmegaClass{CollingsCorbaPRNG} objects from
\OmegaClass{CollingsCorbaPRNGState} objects.  The IDL is defined in the file
\file{CorbaPRNGUtil.idl}.  This class has a single method that instantiates a 
\IDLInterface{CollingsPRNGState}  and returns the resulting \IDLInterface{CollingsPRNG} .

All of this will be run from a small  application
that instantiates an object of this class
and puts it on the CORBA bus. It must initialize the ORB and BOA.
See
 \dir{org/omegahat/Interfaces/CORBA/DynamicJavaObject/Docs}
or
 \dir{org/omegahat/Interfaces/CORBA/DynamicJavaObject/Test}
<<*>>=

package org.omegahat.Simulation.RandomGenerators;

public class CollingsCorbaPRNGFactory 
               extends CorbaPRNGFactory
{
 <<Fields>>

 <<Constructors>>
 <<Get PRNG>>
}


@ Here we will probably have a \OmegaClass{CollingsPRNGFactory}.
<<Fields>>=
      PRNGFactory factory;
@ 
<<Constructors>>=
public CollingsCorbaPRNGFactory() 
{
}

@ 
Again,
<<Get PRNG>>=
public CorbaPRNGUtil.PRNG instantiate(CorbaPRNGUtil.PRNGState corbaState)
{
    PRNG prng = localInstantiate(corbaState);
    return new CorbaPRNG( (PRNG) prng );
}
      
   

public PRNG localInstantiate(CorbaPRNGUtil.PRNGState corbaState)
{
  PRNG prng;
  String prngName;

  /* Get the PRNG's class name */
  prngName = corbaState.getPRNGName();

  System.out.println("Trying to Instantiate a PRNG of class " + prngName + " " + 
	(corbaState instanceof CorbaPRNGUtil.CollingsPRNGState ) ) ;

  /* Test to see if we know how to instantiate it, and do the right thing */  
  if (prngName.equals("org.omegahat.Simulation.RandomGenerators.CollingsPRNG"))
    {	
      try
	{
	  
	  System.err.println("PRNGStateClass :" + corbaState.getClass() );
	  
	  CorbaPRNGUtil.CollingsPRNGState cState = CorbaPRNGUtil.CollingsPRNGStateHelper.narrow(corbaState);
	  if(cState==null)
	    throw new RuntimeException("Failed attempt to narrow to CollingsPRNGState.");
	  
	  prng = new CollingsPRNG(cState.getNumGen(),
				  cState.getMixerMult(),
				  cState.getMixerSeed(),
				  cState.getComponentMult(),
				  cState.getComponentSeed());
	  
	  return prng;
	}
      
      catch(Exception ex) 
	{
	  ex.printStackTrace();
	  throw new RuntimeException("Failed attempt to instantiate");
	}
    }
    
  /* We don't know how to handle this class. See if our parent does. 
   * If none of our parents do, an exception will be thrown to alert the
   *   caller. 
   */
  
  return super.localInstantiate(corbaState);
      
}


@

