d.assign("sm",0.025)
mcmc.iterate(10);
m = new BetaBinomialLikelihood();
m = new BetaBinomialMixtureLikelihood();
m.main( "/home/sandbox/Simulation/MCMC/Disseration/Paper1/Manisha/BarrettsLOH.dat", 0.8, 0.1, 1.0, 0.8, 1.0 )
s = new String[]{"/home/sandbox/Simulation/MCMC/Disseration/Paper1/Manisha/BarrettsLOH.dat", 0.8, 0.1, 1.0, 0.8, 1.0 };
String[] s = new String[]{"/home/sandbox/Simulation/MCMC/Disseration/Paper1/Manisha/BarrettsLOH.dat", "0.8", "0.1", "1.0", "0.8", "1.0" };
String[] s = new String[]{"/home/warnes/sandbox/Simulation/MCMC/Disseration/Paper1/Manisha/BarrettsLOH.dat", "0.8", "0.1", "1.0", "0.8", "1.0" };
String[] s = new String[]{"/home/warnes/sandbox/Simulation/MCMC/Dissertation/Paper1/Manisha/BarrettsLOH.dat", "0.8", "0.1", "1.0", "0.8", "1.0" };
m.main( s );
CollingsPRNGAdministrator a = new CollingsPRNGAdministrator();
PRNG prng = new CollingsPRNG( a.registerPRNGState() );
UnnormalizedDensity target = new B_BB_Mixture( "BarrettsLOH.dat" );
double[] diagVar = { 0.0625, 0.0625, 0.0625, 0.015625 };
Double[] diagVar = { 0.0625, 0.0625, 0.0625, 0.015625 };
diagVar
Double[] diagVar = new Double[]{ 0.0625, 0.0625, 0.0625, 0.015625 };
double[] diagVar = new double[]{ 0.0625, 0.0625, 0.0625, 0.015625 };
diagVar
SymmetricProposal proposal = new NormalMetropolisComponentProposal(diagVar, prng );
proposal
double[] state = new Double[]{0.90, 0.23, 0.71, 0.49 };
double[] state = new double[]{0.90, 0.23, 0.71, 0.49 };
state
CustomMetropolisHastingsSampler mcmc = new CustomMetropolisHastingsSampler(state, // initial state target, // target distribution proposal, // proposal distribution prng, // RNG true );
CustomMetropolisHastingsSampler mcmc = new CustomMetropolisHastingsSampler(state, target, proposal, prng, true);
mcmc
StepListenerPrinter l = new StepListenerPrinter();
MCMCListenerHandle lh = mcmc.registerListener(l);
mcmc.iterate( 10 );
