JAVA PROFILE 1.0.1, created Tue Sep  7 11:29:06 1999

Header for -Xhprof ASCII Output

Copyright 1998 Sun Microsystems, Inc. 901 San Antonio Road, Palo Alto,
California, 94303, U.S.A.  All Rights Reserved.

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME	is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
		the time spent by a thread waiting to enter a monitor.
		Entries in this record are TRACEs ranked by the percentage
		of total monitor contention time and a brief description
		of the monitor.  The "count" field indicates the number of 
		times the monitor was contended at that TRACE.

MONITOR DUMP	is a complete snapshot of all the monitors and threads in 
		the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

CPU SAMPLES BEGIN (total = 2436) Tue Sep  7 11:30:12 1999
rank   self  accum   count trace method
   1 44.83% 44.83%    1092   107 java/lang/Class.getMethods0
   2  5.95% 50.78%     145   111 java/lang/String.<init>
   3  3.98% 54.76%      97   126 java/lang/Class.getMethod0
   4  3.41% 58.17%      83   124 java/lang/System.arraycopy
   5  1.93% 60.10%      47   121 org/omegahat/Environment/Databases/SearchPath.find
   6  1.03% 61.12%      25   118 java/lang/String.equals
   7  1.03% 62.15%      25   153 java/lang/Math.log
   8  1.03% 63.18%      25   174 org/omegahat/Environment/Parser/Parse/MethodLocator.matchClass
   9  0.82% 64.00%      20   116 java/util/Vector$1.nextElement
  10  0.78% 64.78%      19   109 org/omegahat/Probability/Distributions/Normal.logUnnormalizedPDF
  11  0.78% 65.56%      19   151 java/lang/Math.exp
  12  0.78% 66.34%      19   137 java/util/Hashtable.<init>
  13  0.74% 67.08%      18    28 java/lang/ClassLoader.defineClass0
  14  0.62% 67.69%      15   129 java/lang/reflect/Method.invoke
  15  0.62% 68.31%      15   117 java/util/Vector.elements
  16  0.62% 68.92%      15   200 java/util/Hashtable.containsKey
  17  0.57% 69.50%      14   135 java/util/Hashtable.get
  18  0.57% 70.07%      14   184 java/util/Vector.elementAt
  19  0.53% 70.61%      13   183 java/lang/reflect/Method.copy
  20  0.53% 71.14%      13   131 java/util/Hashtable.get
  21  0.49% 71.63%      12   103 org/omegahat/Environment/Interpreter/BasicEvaluator.asObject
  22  0.49% 72.13%      12   123 java/util/Hashtable.containsKey
  23  0.49% 72.62%      12   220 java/util/Vector.addElement
  24  0.45% 73.07%      11   146 java/util/Hashtable.get
  25  0.45% 73.52%      11   175 org/omegahat/Environment/Databases/SearchPath.attach
  26  0.41% 73.93%      10   178 java/lang/String.<init>
  27  0.41% 74.34%      10   231 java/lang/ClassLoader.getCallerClassLoader
  28  0.37% 74.71%       9   136 org/omegahat/Environment/Parser/Parse/MethodLocator.matchClasses
  29  0.37% 75.08%       9   106 org/omegahat/Environment/Parser/Parse/MethodCall.findEvalMethod
  30  0.37% 75.45%       9   163 org/omegahat/Environment/Parser/Parse/MethodLocator.searchMethods
  31  0.33% 75.78%       8   196 org/omegahat/Environment/Parser/Parse/List.<init>
  32  0.33% 76.11%       8   139 org/omegahat/Probability/Distributions/DistributionFunctions.normalPDF
  33  0.33% 76.44%       8    45 org/omegahat/Simulation/MCMC/SimpleExample.main
  34  0.33% 76.77%       8   138 java/lang/String.equals
  35  0.33% 77.09%       8   205 org/omegahat/Environment/Parser/Parse/MethodLocator.toClasses
  36  0.33% 77.42%       8   132 org/omegahat/Environment/Interpreter/BasicEvaluator.searchPath
  37  0.33% 77.75%       8   186 java/util/Vector$1.nextElement
  38  0.29% 78.04%       7   214 java/lang/Object.getClass
  39  0.29% 78.33%       7   177 org/omegahat/Environment/Databases/SearchPath.attach
  40  0.29% 78.61%       7   222 java/util/Vector.indexOf
  41  0.29% 78.90%       7   141 org/omegahat/Environment/Parser/Parse/MethodLocator.searchMethods
  42  0.29% 79.19%       7   155 org/omegahat/Environment/Parser/Parse/MethodCall.eval
  43  0.25% 79.43%       6   167 java/util/Vector.<init>
  44  0.25% 79.68%       6   154 org/omegahat/Environment/Parser/Parse/List.evalElement
  45  0.25% 79.93%       6   156 org/omegahat/Environment/Parser/Parse/List.<init>
  46  0.25% 80.17%       6   203 org/omegahat/Environment/Parser/Parse/BasicExpression.addChild
  47  0.25% 80.42%       6   133 org/omegahat/Environment/Parser/Parse/MethodLocator.isCast
  48  0.21% 80.62%       5   134 java/lang/Class.getMethods
  49  0.21% 80.83%       5   172 java/lang/String.hashCode
  50  0.21% 81.03%       5   145 org/omegahat/Environment/Interpreter/BasicEvaluator.notifyListeners
  51  0.21% 81.24%       5   148 org/omegahat/Environment/Parser/Parse/List.<init>
  52  0.21% 81.44%       5   232 org/omegahat/Environment/Interpreter/BasicEvaluator.Debug
  53  0.21% 81.65%       5   150 java/lang/Class.getMethod
  54  0.21% 81.86%       5   237 org/omegahat/Environment/Parser/Parse/List.size
  55  0.21% 82.06%       5   207 org/omegahat/Environment/Parser/Parse/MethodCall.transformArguments
  56  0.21% 82.27%       5   144 java/util/Vector.elements
  57  0.21% 82.47%       5   278 java/util/Vector.elementAt
  58  0.21% 82.68%       5   140 java/util/Vector.elementAt
  59  0.21% 82.88%       5   216 org/omegahat/Environment/Interpreter/Options.getProperty
  60  0.21% 83.09%       5    29 sun/misc/Resource.getBytes
  61  0.21% 83.29%       5   252 org/omegahat/Environment/Parser/Parse/BasicExpression.<init>
  62  0.21% 83.50%       5    99 java/util/Vector.addElement
  63  0.16% 83.66%       4   307 org/omegahat/Environment/Parser/Parse/BasicExpression.evalInit
  64  0.16% 83.83%       4   127 org/omegahat/Probability/Distributions/Normal.unnormalizedPDF
  65  0.16% 83.99%       4   157 org/omegahat/Environment/Parser/Parse/MethodCall.methodInvoke
  66  0.16% 84.15%       4   263 org/omegahat/Environment/Parser/Parse/Name.eval
  67  0.16% 84.32%       4   304 org/omegahat/Environment/Parser/Parse/List.evalResult
  68  0.16% 84.48%       4   158 org/omegahat/Environment/Databases/ObjectDatabase.table
  69  0.16% 84.65%       4   181 java/lang/Class.isAssignableFrom
  70  0.16% 84.81%       4   279 org/omegahat/Environment/Parser/Parse/List.addElement
  71  0.16% 84.98%       4   189 java/util/Vector$1.hasMoreElements
  72  0.16% 85.14%       4   168 org/omegahat/Environment/Interpreter/BasicEvaluator.Debug
  73  0.16% 85.30%       4   159 org/omegahat/Environment/Parser/Parse/List.toArray
  74  0.16% 85.47%       4   176 org/omegahat/Environment/Utils/OrderedTable.put
  75  0.16% 85.63%       4   202 org/omegahat/Environment/Parser/Parse/List.eval
  76  0.16% 85.80%       4   244 java/util/Hashtable.put
  77  0.12% 85.92%       3   256 java/lang/reflect/Method.getName
  78  0.12% 86.04%       3   227 java/util/Vector$1.nextElement
  79  0.12% 86.17%       3   166 java/util/Vector.addElement
  80  0.12% 86.29%       3   270 java/util/Vector.indexOf
  81  0.12% 86.41%       3   239 java/lang/System.arraycopy
  82  0.12% 86.54%       3   225 org/omegahat/Environment/Interpreter/BasicEvaluator.notifyListeners
  83  0.12% 86.66%       3   318 org/omegahat/Environment/Parser/Parse/List.eval
  84  0.12% 86.78%       3   323 java/lang/String.hashCode
  85  0.12% 86.90%       3   260 org/omegahat/Simulation/MCMC/ExpressionGeneralProposal.logTransitionProbability
  86  0.12% 87.03%       3    68 org/omegahat/Models/Formulae/Parser/omegaFormulaGrammar.name
  87  0.12% 87.15%       3   110 org/omegahat/Environment/Interpreter/Options.getProperty
  88  0.12% 87.27%       3   162 antlr/CommonAST.<init>
  89  0.12% 87.40%       3   152 org/omegahat/Environment/Parser/Parse/List.addElement
  90  0.12% 87.52%       3   179 org/omegahat/Environment/Parser/Parse/Name.eval
  91  0.12% 87.64%       3   171 java/lang/StringBuffer.<init>
  92  0.12% 87.77%       3   149 java/lang/Class.getName
  93  0.12% 87.89%       3   211 org/omegahat/Simulation/MCMC/ExpressionGeneralProposal.logTransitionProbability
  94  0.12% 88.01%       3   255 java/lang/String.equals
  95  0.12% 88.14%       3   188 java/lang/Object.getClass
  96  0.12% 88.26%       3   160 java/util/Hashtable.elements
  97  0.12% 88.38%       3    54 org/omegahat/Models/Formulae/Expressions/ModelFormula.multiLineParse
  98  0.08% 88.46%       2   122 org/omegahat/Environment/Parser/Parse/MethodCall.eval
  99  0.08% 88.55%       2   281 java/util/Properties.getProperty
 100  0.08% 88.63%       2   243 java/util/Vector$1.nextElement
 101  0.08% 88.71%       2   224 org/omegahat/Environment/Parser/Parse/MethodCall.children
 102  0.08% 88.79%       2   143 org/omegahat/Environment/Parser/Parse/BasicExpression.evalInit
 103  0.08% 88.88%       2   291 java/lang/Class.isArray
 104  0.08% 88.96%       2   245 org/omegahat/Environment/Parser/Parse/MethodCall.args
 105  0.08% 89.04%       2    19 java/util/Properties.load
 106  0.08% 89.12%       2   194 java/util/Vector$1.nextElement
 107  0.08% 89.20%       2   344 org/omegahat/Environment/Interpreter/BasicEvaluator.find
 108  0.08% 89.29%       2   308 org/omegahat/Environment/Interpreter/BasicEvaluator.evaluationListeners
 109  0.08% 89.37%       2    59 java/lang/ClassLoader.findBootstrapClass
 110  0.08% 89.45%       2   208 org/omegahat/Environment/Parser/Parse/BasicExpression.evalInit
 111  0.08% 89.53%       2   187 java/util/Vector$1.nextElement
 112  0.08% 89.61%       2   119 org/omegahat/Environment/Parser/Parse/BasicExpression.evalInit
 113  0.08% 89.70%       2   180 org/omegahat/Environment/Parser/Parse/BasicExpression.parent
 114  0.08% 89.78%       2   249 java/lang/Class.getName
 115  0.08% 89.86%       2    65 antlr/TokenBuffer.fill
 116  0.08% 89.94%       2   248 java/util/Vector$1.<init>
